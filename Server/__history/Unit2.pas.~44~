unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.StdCtrls, inifiles,
  Vcl.ExtDlgs, Vcl.ExtCtrls;

type
  TForm2 = class(TForm)
    editComando: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    trackHorizontal: TTrackBar;
    trackVertical: TTrackBar;
    Button1: TButton;
    cbEnable: TCheckBox;
    Label4: TLabel;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    cbPad: TCheckBox;
    editUrl: TEdit;
    OpenPictureDialog1: TOpenPictureDialog;
    Timer1: TTimer;
    Label5: TLabel;
    Panel1: TPanel;
    procedure UpdateConfForm(id:String);
    procedure getSpecialKeys();
    procedure Button4Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;
  index, msCount:Integer;
  buttonId:String;
  firstblood:boolean;

implementation
{$R *.dfm}
uses Unit1;

procedure TForm2.Button1Click(Sender: TObject);
var
tempStr:String;
begin
if Timer1.Enabled=false then
begin
Timer1.Enabled:=true;
button2.Enabled:=false;
button3.Enabled:=false;
button4.Enabled:=false;
cbEnable.Enabled:=false;
cbPad.Enabled:=false;
trackHorizontal.Enabled:=false;
trackVertical.Enabled:=false;
Panel1.Visible:=true;
firstblood:=false;
editComando.Text:='';
end else
begin
Timer1.Enabled:=false;
button2.Enabled:=true;
button3.Enabled:=true;
button4.Enabled:=true;
cbEnable.Enabled:=true;
//cbPad.Enabled:=true;
trackHorizontal.Enabled:=true;
trackVertical.Enabled:=true;
Panel1.Visible:=false;
tempStr:=editComando.Text;
tempStr.Insert(tempStr.Length,'!');//fim de linha
editComando.Text:=tempStr;
end;
end;

procedure TForm2.Button2Click(Sender: TObject);
begin
OpenPictureDialog1.Title:='Selecione uma imagem';
OpenPictureDialog1.InitialDir := GetCurrentDir;
OpenPictureDialog1.Options := [ofFileMustExist];
OpenPictureDialog1.Filter :=
    'Image files|*.bmp';
OpenPictureDialog1.Execute();
editurl.Text:=OpenPictureDialog1.FileName;
end;

procedure TForm2.Button3Click(Sender: TObject);
var
configIni : TIniFile;
tempInt,i,j :Integer;
pict: TPicture;
VlwPaiObj: TButton;
begin
  if (buttonId[3]='0') or (buttonId[3]='1') then
  begin
      tempInt := index+StrToInt(buttonId[2]+buttonId[3])-1;
  end else
    tempInt := index+StrToInt(buttonId[2])-1;

  configIni := TIniFile.Create('ss.ini');
  comando[tempInt]:=editComando.Text;
  sizeX[tempInt]:=trackHorizontal.Position;
  sizeY[tempInt]:=trackVertical.Position;
  url[tempInt]:=editUrl.Text;
  pad[tempInt]:=cbPad.Checked;
  enable[tempInt]:=cbEnable.Checked;

  configIni.WriteString(buttonId,'Comando',comando[index+StrToInt(buttonId[2])]);
  configIni.WriteInteger(buttonId,'sizeX',sizeX[index+StrToInt(buttonId[2])]);
  configIni.WriteInteger(buttonId,'sizeY',sizeY[index+StrToInt(buttonId[2])]);
  configIni.WriteString(buttonId,'url',url[index+StrToInt(buttonId[2])]);
  configIni.WriteInteger(buttonId,'pad',pad[index+StrToInt(buttonId[2])].toInteger);
  configIni.WriteInteger(buttonId,'enable',enable[index+StrToInt(buttonId[2])].toInteger);

  if editurl.Text<>'' then
  begin
    try
    pict := TPicture.Create;
    pict.LoadFromFile(editurl.Text);
    if pict.Width<>(trackHorizontal.Position*60) then
      begin
      ShowMessage ('O tamanho X da imagem deve 60 * o tamanho horizontal');
       editurl.Text:='';
       exit;
      end;

    if pict.Height<>(trackVertical.Position*60) then
      begin
        ShowMessage ('O tamanho Y da imagem deve 60 * o tamanho vertical');
        editurl.Text:='';
        exit;
      end;
    finally
    //pict.Free;
    end;
  end;

  if sizeX[tempInt]<>1 then
  for i := 1 to sizeX[tempInt] do
  begin
    VlwPaiObj:=TButton(Form1.FindComponent(form1.getId(tempInt+i*11)));
   if VlwPaiObj.Enabled=False  then
   begin
   ShowMessage ('O tamanho X do botão esta muito grande');
   sizeX[tempInt]:=1;
   sizeY[tempInt]:=1;
   Form2.Close;
   ModalResult := mrCancel;
   end;

    if sizeY[tempInt]<>1 then
    for j := 1 to sizeY[tempInt] do
    begin
     VlwPaiObj:=TButton(Form1.FindComponent(form1.getId(tempInt+i*11+j)));
     if VlwPaiObj.Enabled=False or ((tempInt+i*11+j)>76)then
     begin
      ShowMessage ('O tamanho Y do botão esta muito grande');
      sizeX[tempInt]:=1;
     sizeY[tempInt]:=1;
     Form2.Close;
     ModalResult := mrCancel;
     end;
    end;
   end;
   if sizeY[tempInt]<>1 then
    for j := 1 to sizeY[tempInt] do
    begin
     VlwPaiObj:=TButton(Form1.FindComponent(form1.getId(tempInt+j)));
     if VlwPaiObj.Enabled=False then
     begin
     ShowMessage ('O tamanho do botão esta muito grande');
     sizeX[tempInt]:=1;
     sizeY[tempInt]:=1;
     Form2.Close;
     ModalResult := mrCancel;
     end;
    end;
  Form2.Close;
  ModalResult := mrOK;
end;

procedure TForm2.Button4Click(Sender: TObject);
begin
Form2.Close;
ModalResult := mrCancel;
end;

procedure TForm2.FormCreate(Sender: TObject);
begin
  //msCount.MinValue:= 0;
  //msCount.MinValue:= 4294967295;
  Timer1.Interval:=timeresolution;
  msCount:=0;
end;

procedure TForm2.getSpecialKeys();
begin
if ((GetKeyState(VK_SHIFT) and $80) <> 0) then
editComando.Text:=editComando.Text+'shift+';
if ((GetKeyState(VK_CONTROL) and $80) <> 0) then
editComando.Text:=editComando.Text+'control+';
if ((GetKeyState(VK_MENU) and $80) <> 0) then
editComando.Text:=editComando.Text+'alt+';
end;

procedure TForm2.Timer1Timer(Sender: TObject);
begin
msCount:=1+msCount;
if ((GetKeyState(VK_LEFT) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'left'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState(VK_UP) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'up'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState(VK_RIGHT) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'right'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState(VK_DOWN) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'down'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($30) or GetKeyState(VK_NUMPAD0) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'0'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($31) or GetKeyState(VK_NUMPAD1) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'1'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($32) or GetKeyState(VK_NUMPAD2) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'2'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($33)or GetKeyState(VK_NUMPAD3) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'3'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($34)or GetKeyState(VK_NUMPAD4) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'4'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($35)or GetKeyState(VK_NUMPAD5) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'5'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($36)or GetKeyState(VK_NUMPAD6) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'6'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($37)or GetKeyState(VK_NUMPAD7) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'7'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($38)or GetKeyState(VK_NUMPAD8) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'8'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($39) or GetKeyState(VK_NUMPAD9) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'9'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($41) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'A'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($42) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'B'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($43) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'C'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($44) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'D'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($45) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'E'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($46) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'F'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($47) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'G'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($48) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'H'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($49) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'I'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($4A) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'J'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($4B) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'K'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($4C) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'L'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($4D) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'M'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($4E) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'N'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($4F) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'O'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($50) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'P'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($51) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'Q'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($52) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'R'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($53) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'S'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($54) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'T'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($55) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'U'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($56) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'V'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($57) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'W'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($58) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'X'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($59) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'Y'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState($5A) and $80) <> 0) then
begin
getSpecialKeys();
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'Z'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState(VK_RETURN) and $80) <> 0) then
begin
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'enter'+'+';
firstblood:=true;
msCount:=0;
end;
//
if ((GetKeyState(VK_SPACE) and $80) <> 0) then
begin
if firstblood then
editComando.Text:=editComando.Text+IntToStr(msCount)+'+';
editComando.Text:=editComando.Text+'space'+'+';
firstblood:=true;
msCount:=0;
end;
//

end;

procedure TForm2.UpdateConfForm(id:String);
var
tempInt,i,j:Integer;
VlwPaiObj: TButton;
begin
buttonId:=id;
case id[1] of
  'A': index:=0;
  'B': index:=11;
  'C': index:=22;
  'D': index:=33;
  'E': index:=44;
  'F': index:=55;
  'G': index:=66;
  end;
  if (buttonId[3]='0') or (buttonId[3]='1') then
  begin
      tempInt := index+StrToInt(id[2]+id[3])-1;
  end else
      tempInt := index+StrToInt(id[2])-1;

  editComando.Text:= comando[tempInt];
  trackHorizontal.Position:=sizeX[tempInt];
  trackVertical.Position:=sizeY[tempInt];
  editUrl.Text:= url[tempInt];
  cbPad.Checked:= pad[tempInt];
  cbEnable.Checked:= enable[tempInt];

  if sizeX[tempInt]<>1 then
  for i := 1 to sizeX[tempInt] do
  begin
   enable[tempInt+i*11]:=true;
   VlwPaiObj:=TButton(Form1.FindComponent(form1.getId(tempInt+i*11)));
   VlwPaiObj.Enabled:=true;
    if sizeY[tempInt]<>1 then
    for j := 1 to sizeY[tempInt] do
    begin
     enable[tempInt+i*11+j]:=true;
     VlwPaiObj:=TButton(Form1.FindComponent(form1.getId(tempInt+i*11+j)));
     VlwPaiObj.Enabled:=true;
    end;
   end;
   if sizeY[tempInt]<>1 then
    for j := 1 to sizeY[tempInt] do  //DESNECESSARIO
     begin
     enable[tempInt+j]:=true;
     VlwPaiObj:=TButton(Form1.FindComponent(form1.getId(tempInt+j)));
     VlwPaiObj.Enabled:=true;
     end;
end;

end.
